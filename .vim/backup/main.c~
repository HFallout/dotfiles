/*
 * ==================================================
 *
 *      Filename: main.c
 *
 *      Description: exploring memory
 *
 *      Created: 2012-11-20
 *      Author: Richard Buckland
 *
 * ==================================================
 */

#include <stdio.h>
#include <stdlib.h>

long add(int x, int y);

int main(int argc, const char *argv[])
{
    int x;
    int y;
    long total;

    x = 40;
    y = 2;

    total = add(x, y);

    printf("\n");
    printf("the sum of %d and %d is %ld\n", x, y, total);
    printf("\n");

    char c = 'a';

    unsigned long ul = 0;
    unsigned int ui = 1;
    unsigned long long ull = 2;
    unsigned short us = 3;

    signed long sl = 4;
    signed int si = 5;
    signed long long sll = 6;
    signed short ss = 7;

    long l = 8;
    int i = 9;
    long long ll = 10;
    short s = 11;

    float f = 3.1;
    double d = 3.14;


    printf("the number of bytes used to store a char is %d\n", sizeof(c));
    printf("\n")
    printf("the number of bytes used to store an unsigned long is %d\n", sizeof(ul));
    printf("the number of bytes used to store an unsigned int is %d\n", sizeof(ui));
    printf("the number of bytes used to store an unsigned long long is %d\n", sizeof(ull));
    printf("the number of bytes used to store an unsigned short is %d\n", sizeof(us));
    printf("\n")
    printf("the number of bytes used to store a signed long is %d\n", sizeof(sl));
    printf("the number of bytes used to store a signed int is %d\n", sizeof(si));
    printf("the number of bytes used to store a signed long long is %d\n", sizeof(sll));
    printf("the number of bytes used to store a signed short is %d\n", sizeof(ss));
    printf("\n")

    // add them all together to avoid compiler complaints

    double grandTotal;
    grandTotal = c + ul + ui + ull + us + sl + si + sll +
                 ss + l + i + ll + s + f + d;

    printf("\n");
    printf("all these things added together make %f\n", grandTotal);


    return EXIT_SUCCESS;
}


long add(int x, int y)
{
    long answer;
    answer = x + y;

    return answer;
}
